### üß† **Funcionamiento Detallado de la Aplicaci√≥n y Uso de IA**

---

#### **1. Estructura General de la App**  
La aplicaci√≥n es un **conversor archiv√≠stico** que transforma metadatos de documentos hist√≥ricos en formato CSV al est√°ndar ISAD(G), utilizando IA para mejorar la calidad de los datos. Su flujo es:

1. **Interfaz de Usuario (Streamlit):**  
   - Subida de CSV.
   - Configuraci√≥n del token de Hugging Face.
   - Visualizaci√≥n de resultados y descarga de archivos procesados.

2. **L√≥gica de Procesamiento (`ISADConverter`):**  
   - Normalizaci√≥n de datos.
   - Mejora de metadatos con IA (t√≠tulos y fechas).
   - Generaci√≥n de archivos CSV/Excel.

---

#### **2. Procesamiento con IA: Clase `ISADConverter`**  

##### **Componentes Clave**  
| M√©todo/Funci√≥n                | Descripci√≥n                                                                                     | Uso de IA                                                                 |
|--------------------------------|-------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------|
| `_normalize_column_names()`    | Estandariza nombres de columnas (ej: `Signatura` ‚Üí `referenceCode`).                           | ‚ùå                                                                        |
| `_normalize_date_with_ai()`    | Convierte fechas ambiguas a formato ISO 8601 usando Mixtral-8x7B.                              | ‚úÖ **Prompt ejemplo:**<br>*"Convierte 'Enero de 1890' a ISO 8601: [RESPUESTA]"* |
| `_generate_title_with_ai()`    | Genera t√≠tulos formales para documentos usando contexto (instituci√≥n, categor√≠a, pa√≠s).        | ‚úÖ **Prompt ejemplo:**<br>*"Genera t√≠tulo usando: Instituci√≥n: Municipalidad de Lima..."* |
| `process()`                    | Orquesta todo el proceso: carga CSV, aplica transformaciones, guarda resultados.               | ‚ùå (Coordina el uso de IA en otros m√©todos)                                |

---

#### **3. Flujo de Datos con IA**  
**Paso a Paso:**  
1. **Entrada:** CSV con columnas como `Signatura`, `Fecha cronica`, `Institucion`, etc.  
2. **Normalizaci√≥n Inicial:**  
   - Columnas renombradas a est√°ndar ISAD(G) (ej: `title`, `date`).  
   - Fechas parseadas autom√°ticamente si son simples (ej: `1890` ‚Üí `1890-01-01`).  
3. **IA para Casos Complejos:**  
   - **Fechas no est√°ndar:**  
     - Si el parseo falla, se env√≠a la fecha original a Mixtral-8x7B.  
     - **Ejemplo:**  
       - Entrada: `"Verano de 1925"` ‚Üí IA ‚Üí `"1925-06-01"`.  
   - **T√≠tulos ausentes o gen√©ricos:**  
     - Se genera un t√≠tulo descriptivo usando datos de la fila.  
     - **Ejemplo:**  
       - Entrada: `Institucion: "Archivo Nacional", Categoria: "Correspondencia"` ‚Üí IA ‚Üí `"Correspondencia administrativa del Archivo Nacional (1925)"`.  
4. **Salida:**  
   - CSV/Excel con metadatos mejorados y normalizados seg√∫n ISAD(G).  

---

#### **4. Tecnolog√≠as y Modelos de IA**  
- **Modelo Utilizado:** `mistralai/Mixtral-8x7B-Instruct-v0.1` (Hugging Face).  
- **Integraci√≥n:**  
  - Se accede via `HuggingFaceEndpoint` de LangChain.  
  - **Prompt Engineering:** Instrucciones espec√≠ficas en espa√±ol para garantizar respuestas estructuradas.  
- **Configuraci√≥n:**  
  - `temperature=0.3`: Balance entre creatividad y precisi√≥n.  
  - `max_new_tokens=150`: Limita respuestas largas para mantener relevancia.  

---

#### **5. Ejemplo de Procesamiento**  
**Entrada (CSV original):**  
| Signatura | Fecha cronica   | Institucion         | Categoria       |  
|-----------|-----------------|---------------------|-----------------|  
| AH-001    | Febrero 1901    | Municipalidad Lima  | Cartas oficiales|  

**Procesamiento:**  
1. Normalizaci√≥n de columnas ‚Üí `referenceCode`, `date`, `title`, `scopeAndContent`.  
2. IA mejora `date`: `"Febrero 1901"` ‚Üí `"1901-02-01"`.  
3. IA genera `title`: `"Cartas oficiales de la Municipalidad de Lima (1901)"`.  

**Salida (CSV ISAD(G)):**  
| referenceCode | date       | title                                      | scopeAndContent     |  
|---------------|------------|--------------------------------------------|---------------------|  
| AH-001        | 1901-02-01 | Cartas oficiales de la Municipalidad de Lima | Documentos administrativos |  

---

#### **6. Dependencias Cr√≠ticas**  
- **Streamlit:** Interfaz web.  
- **LangChain/HuggingFace:** Integraci√≥n con modelos de IA.  
- **Pandas:** Manipulaci√≥n de datos.  
- **Openpyxl:** Exportaci√≥n a Excel.  

---

#### **7. Limitaciones y Mejoras Potenciales**  
- **Limitaciones:**  
  - Dependencia de la calidad del prompt para resultados precisos.  
  - Costo/tiempo de inferencia con modelos grandes.  
- **Mejoras:**  
  - Cachear respuestas de IA para fechas/t√≠tulos recurrentes.  
  - A√±adir validaci√≥n manual de resultados.  

üîç **Conclusi√≥n:** La app combina reglas de normalizaci√≥n con IA para resolver ambig√ºedades, ofreciendo una soluci√≥n h√≠brida eficiente para metadatos hist√≥ricos.